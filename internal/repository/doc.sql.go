// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: doc.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const deleteDoc = `-- name: DeleteDoc :exec
UPDATE documents 
SET
  is_deleted = $1, 
  updated_at = $2,
  updated_by = $3
WHERE id = $4
`

type DeleteDocParams struct {
	IsDeleted pgtype.Bool
	UpdatedAt pgtype.Timestamp
	UpdatedBy pgtype.Text
	ID        string
}

func (q *Queries) DeleteDoc(ctx context.Context, arg DeleteDocParams) error {
	_, err := q.db.Exec(ctx, deleteDoc,
		arg.IsDeleted,
		arg.UpdatedAt,
		arg.UpdatedBy,
		arg.ID,
	)
	return err
}

const insertDoc = `-- name: InsertDoc :exec
INSERT INTO documents (
  id,parent_id,project_id,name,is_folder,created_at,created_by
) VALUES (
  $1, $2, $3, $4, $5, $6, $7
)
`

type InsertDocParams struct {
	ID        string
	ParentID  pgtype.Text
	ProjectID pgtype.Text
	Name      string
	IsFolder  pgtype.Bool
	CreatedAt pgtype.Timestamp
	CreatedBy pgtype.Text
}

func (q *Queries) InsertDoc(ctx context.Context, arg InsertDocParams) error {
	_, err := q.db.Exec(ctx, insertDoc,
		arg.ID,
		arg.ParentID,
		arg.ProjectID,
		arg.Name,
		arg.IsFolder,
		arg.CreatedAt,
		arg.CreatedBy,
	)
	return err
}

const updateDoc = `-- name: UpdateDoc :exec
UPDATE documents 
SET
  name = $1,
  parent_id = $2,
  updated_at = $3,
  updated_by = $4
WHERE id = $5
`

type UpdateDocParams struct {
	Name      string
	ParentID  pgtype.Text
	UpdatedAt pgtype.Timestamp
	UpdatedBy pgtype.Text
	ID        string
}

func (q *Queries) UpdateDoc(ctx context.Context, arg UpdateDocParams) error {
	_, err := q.db.Exec(ctx, updateDoc,
		arg.Name,
		arg.ParentID,
		arg.UpdatedAt,
		arg.UpdatedBy,
		arg.ID,
	)
	return err
}
